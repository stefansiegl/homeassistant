# ----------------
# Explanation: Integrate chips that should be shown as an error (currently
# at the top of my dashboard).
#
# For most usecases, simply using a conditions tag and nesting the sensor
# is sufficient. For more advanced cases, where the sensor itself it not
# enough signal to know whether the warning is still existent, you might want
# to consider setting up an alert (example: Waste warnings)
# ----------------
type: vertical-stack
cards:
  - type: custom:mushroom-chips-card
    chips:
      # ---------------------------
      # Waste
      # ---------------------------

      # Waste warning for bio. Hold long to remove
      - type: conditional
        conditions:
          - entity: alert.alert_waste_bio_upcoming
            # this ensures that this will be filtered if "off" or "acknowledged"
            state: "on"
        chip:
          type: template
          picture: '{{ state_attr("sensor.waste_bio_display", "entity_picture") }}'
          content: '{{ states("sensor.waste_bio_display") }}'
          hold_action:
            action: call-service
            service: alert.turn_off
            target:
              entity_id: alert.alert_waste_bio_upcoming
            data: {}

      # Waste warning for papier. Hold long to remove
      - type: conditional
        conditions:
          - entity: alert.alert_waste_papiertonne_upcoming
            # this ensures that this will be filtered if "off" or "acknowledged"
            state: "on"
        chip:
          type: template
          picture: '{{ state_attr("sensor.waste_papiertonne_display", "entity_picture") }}'
          content: '{{ states("sensor.waste_papiertonne_display") }}'
          hold_action:
            action: call-service
            service: alert.turn_off
            target:
              entity_id: alert.alert_waste_papiertonne_upcoming
            data: {}

      # Waste warning for Restmüll. Hold long to remove
      - type: conditional
        conditions:
          - entity: alert.alert_waste_rest_upcoming
            # this ensures that this will be filtered if "off" or "acknowledged"
            state: "on"
        chip:
          type: template
          picture: '{{ state_attr("sensor.waste_rest_display", "entity_picture") }}'
          content: '{{ states("sensor.waste_rest_display") }}'
          hold_action:
            action: call-service
            service: alert.turn_off
            target:
              entity_id: alert.alert_waste_rest_upcoming
            data: {}

      # Waste warning for Gelbe Tonne. Hold long to remove
      - type: conditional
        conditions:
          - entity: alert.alert_waste_gelb_upcoming
            # this ensures that this will be filtered if "off" or "acknowledged"
            state: "on"
        chip:
          type: template
          picture: '{{ state_attr("sensor.waste_gelb_display", "entity_picture") }}'
          content: '{{ states("sensor.waste_gelb_display") }}'
          hold_action:
            action: call-service
            service: alert.turn_off
            target:
              entity_id: alert.alert_waste_gelb_upcoming
            data: {}

      # ---------------------------
      # Briefkasten - Post vorhanden
      # ---------------------------
      - type: conditional
        conditions:
          - entity: counter.briefkasten_open_counter
            # as long as the counter is not 0
            state_not: "0"
        chip:
          type: template
          icon: mdi:email-box
          content: '{{ states("counter.briefkasten_open_counter") }}'
          hold_action:
            action: call-service
            service: counter.reset
            target:
              entity_id: counter.briefkasten_open_counter
            data: {}

      # --------------------------------------------------------
      # Active over-writes
      # --------------------------------------------------------

      - type: conditional
        conditions:
          - entity: input_boolean.deactivate_vacuum_2og
            # as long as the counter is not 0
            state: "on"
        chip:
          type: template
          icon: mdi:security
          content: "2OG Vacuum deaktiviert"
          tap_action:
            action: navigate
            navigation_path: /lovelace-yaml/4
          hold_action:
            action: toggle

      - type: conditional
        conditions:
          - entity: input_boolean.deactivate_vacuum_eg
            # as long as the counter is not 0
            state: "on"
        chip:
          type: template
          icon: mdi:security
          content: "EG Vacuum deaktiviert"
          tap_action:
            action: navigate
            navigation_path: /lovelace-yaml/4
          hold_action:
            action: toggle

      # --------------------------------------------------------
      # Pflanzen - I only check for moisture (not conductivity)
      # --------------------------------------------------------
      - type: conditional
        conditions:
          - entity: binary_sensor.template_plant_bambus_moisture_low
            state: "on"
        chip:
          type: template
          icon: mdi:water-alert
          icon_color: blue
          content: >-
            'Bambus {{ states("sensor.plantsensor_bambus_moisture", rounded=True) }}%'

      - type: conditional
        conditions:
          - entity: binary_sensor.template_plant_elefantenfuss_moisture_low
            state: "on"
        chip:
          type: template
          icon: mdi:water-alert
          icon_color: blue
          content: >-
            'Elefantenfuss {{ states("sensor.plantsensor_elefantenfuss_moisture", rounded=True) }}%'

      - type: conditional
        conditions:
          - entity: binary_sensor.template_plant_flamingopflanze_moisture_low
            state: "on"
        chip:
          type: template
          icon: mdi:water-alert
          icon_color: blue
          content: >-
            'Flamingoblume {{ states("sensor.plantsensor_flamingoblume_moisture", rounded=True) }}%'

      - type: conditional
        conditions:
          - entity: binary_sensor.template_plant_geranie_moisture_low
            state: "on"
        chip:
          type: template
          icon: mdi:water-alert
          icon_color: blue
          content: >-
            'Geranie {{ states("sensor.plantsensor_geranie_moisture", rounded=True) }}%'

      - type: conditional
        conditions:
          - entity: binary_sensor.template_plant_glucksfeder_moisture_low
            state: "on"
        chip:
          type: template
          icon: mdi:water-alert
          icon_color: blue
          content: >-
            'Glücksfeder {{ states("sensor.plantsensor_glucksfeder_moisture", rounded=True) }}%'

      - type: conditional
        conditions:
          - entity: binary_sensor.template_plant_strahlenaralie_moisture_low
            state: "on"
        chip:
          type: template
          icon: mdi:water-alert
          icon_color: blue
          content: >-
            'Strahlenaralie {{ states("sensor.plantsensor_strahlenaralie_moisture", rounded=True) }}%'

      - type: conditional
        conditions:
          - entity: binary_sensor.template_plant_zimmer_alpenveilchen_moisture_low
            state: "on"
        chip:
          type: template
          icon: mdi:water-alert
          icon_color: blue
          content: >-
            'Alpenveilchen {{ states("sensor.plantsensor_alpenveilchen_moisture", rounded=True) }}%'

      - type: conditional
        conditions:
          - entity: binary_sensor.template_plant_yucca_moisture_low
            state: "on"
        chip:
          type: template
          icon: mdi:water-alert
          icon_color: blue
          content: >-
            'Yucca {{ states("sensor.plantsensor_yucca_moisture", rounded=True) }}%'
