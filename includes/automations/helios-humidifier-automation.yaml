# Automatisierung für Lüftungsanlage
- alias: Lüftungsanlage Automatikmodus
  # OR connected
  trigger:
    - platform: numeric_state
      entity_id: sensor.temperatursensor_arbeitszimmer_humidity
      above: input_number.humidity_control_ventilation_start
      for: "00:05:00"
    - platform: numeric_state
      entity_id: sensor.temperatursensor_kueche_humidity
      above: input_number.humidity_control_ventilation_start
      for: "00:05:00"
    - platform: numeric_state
      entity_id: sensor.temperatursensor_lego_humidity
      above: input_number.humidity_control_ventilation_start
      for: "00:05:00"
    - platform: numeric_state
      entity_id: sensor.e3_6d_e1_02_ec_17_carbon_dioxide
      above: 950
    - platform: time
      at: "12:30:00"
  condition:
    - condition: state
      entity_id: input_boolean.lueftungsanlage_automatikmodus_aktiv #  input_boolean für Automatikmodus
      state: "on"
  action:
    - service: logger.log
      data:
        level: debug
        name: humidity_control
        message: "Helios Automation triggered."

    # This choose selects the mode the automation should run as
    # if one is selected the others are not executed.
    - choose:
        # ------------------------
        # Daily mode
        # ------------------------
        - conditions:
            - condition: time
              after: "12:30:00"
              before: "14:00:00"
          sequence:
            - service: logger.log
              data:
                level: debug
                name: humidity_control
                message: "Helios Automation daily mode activated."
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "Daily mode"
            - service: fan.set_percentage
              target:
                entity_id: fan.helios
              data:
                percentage: 50
            - delay:
                hours: 1.5
            - service: fan.set_percentage
              target:
                entity_id: fan.helios
              data:
                percentage: 25
            - service: logger.log
              data:
                level: debug
                name: humidity_control
                message: "Helios Automation daily mode de-activated."
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "idle"
            - service: fan.turn_off
              entity_id: fan.helios

        # ------------------------
        # CO2 control mode
        # ------------------------
        - conditions:
            - condition: numeric_state # CO2 Condition
              entity_id: sensor.e3_6d_e1_02_ec_17_carbon_dioxide # Replace with your CO2 sensor entity ID
              above: 950
          sequence:
            - service: logger.log
              data:
                level: debug
                name: humidity_control
                message: "CO2 mode activated."
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "CO2 mode"
            - service: fan.set_percentage
              target:
                entity_id: fan.helios
              data:
                percentage: 100
            - wait_for_trigger: # Wait for CO2 to drop below threshold
                - platform: numeric_state
                  entity_id: sensor.e3_6d_e1_02_ec_17_carbon_dioxide
                  below: 850
              timeout: "00:30:00" # Minimum 30 minutes runtime
              continue_on_timeout: true
            - service: logger.log
              data:
                level: debug
                name: humidity_control
                message: "CO2 mode de-activated."
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "idle"
            - service: fan.turn_off
              entity_id: fan.helios

        # ------------------------
        # Humidity control mode
        # ------------------------
        - conditions: [] # Leere Liste für conditions im default-Zweig
          sequence:
            - service: logger.log
              data:
                level: debug
                name: humidity_control
                message: "Reduce humidity mode activated."
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "Humidity mode"
            - if:
                condition: state
                entity_id: input_boolean.humidity_control_notify_details # Your input_boolean
                state: "on"
              then:
                - service: notify.mobile_app_pixel_9_pro
                  data:
                    message: "Ventilation on - reduce humidity"
                    title: "Ventilation on - reduce humidity"
            - service: fan.set_percentage
              target:
                entity_id: fan.helios
              data:
                percentage: 25
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "idle"

        # DEFAULT CASE ventilation
        # this needs to be 3x wait_for_triggers to make them AND connected.

        - wait_for_trigger:
            - platform: numeric_state
              entity_id: sensor.temperatursensor_arbeitszimmer_humidity
              below: input_number.humidity_control_ventilation_stop
          timeout: "00:30:00"
          continue_on_timeout: true
        - variables: # Store timeout status for Room A
            timeout_a: "{{ wait.trigger == none }}"
        - wait_for_trigger:
            - platform: numeric_state
              entity_id: sensor.temperatursensor_kueche_humidity
              below: input_number.humidity_control_ventilation_stop
          timeout: "00:30:00"
          continue_on_timeout: true
        - variables: # Store timeout status for Room B
            timeout_b: "{{ wait.trigger == none }}"
        - wait_for_trigger:
            - platform: numeric_state
              entity_id: sensor.temperatursensor_lego_humidity
              below: input_number.humidity_control_ventilation_stop
          timeout: "00:30:00"
          continue_on_timeout: true
        - variables: # Store timeout status for Room C
            timeout_c: "{{ wait.trigger == none }}"
        - choose:
            - conditions:
                - condition: template # Check if any timeout occurred
                  value_template: "{{ timeout_a or timeout_b or timeout_c }}"
              sequence:
                - service: logger.log
                  data:
                    level: debug
                    name: humidity_control
                    message: >
                      Ventilation stopped.
                      {% if timeout_a %} Room A timed out. {% endif %}
                      {% if timeout_b %} Room B timed out. {% endif %}
                      {% if timeout_c %} Room C timed out. {% endif %}
                - if:
                    - condition: state
                      entity_id: input_boolean.humidity_control_notify_details
                      state: "on"
                  then:
                    - service: notify.mobile_app_pixel_9_pro
                      data:
                        message: >
                          Ventilation stopped.
                          {% if timeout_a %} Room A timed out. {% endif %}
                          {% if timeout_b %} Room B timed out. {% endif %}
                          {% if timeout_c %} Room C timed out. {% endif %}
                        title: "Ventilation Stopped (Timeout)"
            - conditions: [] # This is now the default case
              sequence:
                - service: logger.log
                  data:
                    level: debug
                    name: humidity_control
                    message: "Ventilation stopped. All rooms below threshold."
                - condition: state
                  entity_id: input_boolean.humidity_control_notify_details
                  state: "on"
                - service: notify.mobile_app_pixel_9_pro
                  data:
                    message: "Ventilation stopped. All rooms below threshold."
                    title: "Ventilation Stopped"
        - service: fan.turn_off
          entity_id: fan.helios
