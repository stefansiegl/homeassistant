# Automatisierung für Lüftungsanlage
- alias: Lüftungsanlage Automatikmodus
  id: lueftungsanlage_automatikmodus # Add a unique ID here
  # OR connected
  trigger:
    - platform: time_pattern
      minutes: "/5" # Check every 5 minutes
  condition:
    - condition: state
      entity_id: input_boolean.lueftungsanlage_automatikmodus_aktiv #
      state: "on"

  action:
    - service: logbook.log
      data:
        name: Humidity Control
        entity_id: fan.helios
        message: "Helios Automation Script triggered"

    # This choose selects the mode the automation should run as
    # if one is selected the others are not executed.
    - choose:
        # # ------------------------
        # # Daily mode
        # # ------------------------
        # - conditions:
        #     - condition: time
        #       after: "12:30:00"
        #       before: "14:00:00"
        #   sequence:
        #     - service: logbook.log
        #       data:
        #         name: Humidity Control
        #         entity_id: fan.helios
        #         message: "Mode: Daily Mode - Started"
        #     - service: input_text.set_value
        #       target:
        #         entity_id: input_text.humidity_control_status
        #       data:
        #         value: "Daily mode"
        #     - service: fan.set_percentage
        #       target:
        #         entity_id: fan.helios
        #       data:
        #         percentage: 50
        #     - delay:
        #         hours: 1.5
        #     - service: logbook.log
        #       data:
        #         name: Humidity Control
        #         entity_id: fan.helios
        #         message: "Mode: Daily Mode - Ended"
        #     - service: input_text.set_value
        #       target:
        #         entity_id: input_text.humidity_control_status
        #       data:
        #         value: "idle"
        #     - service: fan.set_percentage
        #       target:
        #         entity_id: fan.helios
        #       data:
        #         percentage: 0
        #     - service: fan.turn_off
        #       entity_id: fan.helios

        # ------------------------
        # CO2 control mode
        # ------------------------
        - conditions:
            - condition: or
              conditions:
                - condition: numeric_state # CO2 Condition
                  entity_id: sensor.aranet4_01_arbeitszimmer_carbon_dioxide
                  above: 800
                - condition: numeric_state # CO2 Condition
                  entity_id: sensor.aranet4_02_kueche_carbon_dioxide
                  above: 800
          sequence:
            - service: logbook.log
              data:
                name: Humidity Control
                entity_id: fan.helios
                message: "Mode: CO2 - Started"
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "CO2 mode"
            - service: fan.set_percentage
              target:
                entity_id: fan.helios
              data:
                percentage: 50
            - wait_for_trigger: # Wait for CO2 to drop below threshold
                - platform: numeric_state
                  entity_id: sensor.aranet4_01_arbeitszimmer_carbon_dioxide
                  below: 700
              timeout: "01:00:00" # Minimum 30 minutes runtime
              continue_on_timeout: true
            - wait_for_trigger: # Wait for CO2 to drop below threshold
                - platform: numeric_state
                  entity_id: sensor.aranet4_02_kueche_carbon_dioxide
                  below: 700
              timeout: "01:00:00" # Minimum 30 minutes runtime
              continue_on_timeout: true
            - service: logbook.log
              data:
                name: Humidity Control
                entity_id: fan.helios
                message: "Mode: Daily Mode - Stopped"
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "idle"
            - service: fan.set_percentage
              target:
                entity_id: fan.helios
              data:
                percentage: 0

            # - service: input_text.set_value
            #   target:
            #     entity_id: input_text.humidity_control_status
            #   data:
            #     value: "idle"
            # - service: fan.set_percentage
            #   target:
            #     entity_id: fan.helios
            #   data:
            #     percentage: 0
            # - service: fan.turn_off
            #   entity_id: fan.helios

        # ------------------------
        # Humidity mode
        # ------------------------
        - conditions:
            - condition: or
              conditions:
                - condition: numeric_state
                  entity_id: sensor.temperatursensor_arbeitszimmer_humidity
                  above: input_number.humidity_control_ventilation_start
                - condition: numeric_state
                  entity_id: sensor.temperatursensor_kueche_humidity
                  above: input_number.humidity_control_ventilation_start
                - condition: numeric_state
                  entity_id: sensor.temperatursensor_lego_humidity
                  above: input_number.humidity_control_ventilation_start
          sequence:
            - service: logbook.log
              data:
                name: Humidity Control
                entity_id: fan.helios
                message: "Mode: Humidity Mode - Started"
            - service: input_text.set_value
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "Humidity mode"
            - service: fan.set_percentage
              target:
                entity_id: fan.helios
              data:
                percentage: 50 # You can adjust the percentage as needed
            - wait_for_trigger:
                - platform: numeric_state
                  entity_id: sensor.temperatursensor_arbeitszimmer_humidity
                  below: input_number.humidity_control_ventilation_stop
              timeout: "00:30:00"
              continue_on_timeout: true
            - wait_for_trigger:
                - platform: numeric_state
                  entity_id: sensor.temperatursensor_kueche_humidity
                  below: input_number.humidity_control_ventilation_stop
              timeout: "00:30:00"
              continue_on_timeout: true
            - wait_for_trigger:
                - platform: numeric_state
                  entity_id: sensor.temperatursensor_lego_humidity
                  below: input_number.humidity_control_ventilation_stop
              timeout: "00:30:00"
              continue_on_timeout: true
            - if:
                - condition: template
                  value_template: "{{ wait.trigger.all == none }}" # Check if ALL wait_for_triggers timed out
              then:
                - service: logbook.log
                  data:
                    name: Humidity Control
                    entity_id: fan.helios
                    message: "Mode: Humidity Mode - Stopped [timeout]"
                - if:
                    - condition: state
                      entity_id: input_boolean.humidity_control_notify_details
                      state: "on"
                  then:
                    - service: notify.mobile_app_pixel_9_pro
                      data:
                        message: "Ventilation stopped due to timeout."
                        title: "Ventilation Stopped (Timeout)"
              else:
                - service: logbook.log
                  data:
                    name: Humidity Control
                    entity_id: fan.helios
                    message: "Mode: Humidity Mode - Stopped"
                - if:
                    - condition: state
                      entity_id: input_boolean.humidity_control_notify_details
                      state: "on"
                  then:
                    - service: notify.mobile_app_pixel_9_pro
                      data:
                        message: "Ventilation stopped. All rooms below threshold."
                        title: "Ventilation Stopped"
            - service: input_text.set_value # Reset status to idle
              target:
                entity_id: input_text.humidity_control_status
              data:
                value: "idle"
            - service: fan.set_percentage
              target:
                entity_id: fan.helios
              data:
                percentage: 0

            # - service: input_text.set_value # Reset status to idle
            #   target:
            #     entity_id: input_text.humidity_control_status
            #   data:
            #     value: "idle"
            # - service: fan.set_percentage
            #   target:
            #     entity_id: fan.helios
            #   data:
            #     percentage: 0
            # - service: fan.turn_off
            #   entity_id: fan.helios
