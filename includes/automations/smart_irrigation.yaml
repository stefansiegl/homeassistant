- alias: Smart Irrigation (automated)

  # -----------------------------------------------------------
  # After the sun went up
  # -----------------------------------------------------------
  trigger:
    - platform: state
      entity_id: sun.sun
      from: "below_horizon"
      to: "above_horizon"
      for:
        hours: 0
        minutes: 0
        seconds: 5

  # Only run if battery level is ok and at least one zone needs water
  condition:
    - condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.wassersteuerung_battery_level
          # this prevents this to start now
          above: 1

  # Start with the first zone and check every instance
  # (starting with first is important since this optimizes the water switch)
  action:
    - if:
        - condition: and
          conditions:
            - condition: template
              value_template: '{{ (states("sensor.zone1_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone1_adjust")|float)|int > states("input_number.watering_zone1_threshold")|int }}'
            - condition: state
              entity_id: input_boolean.watering_zone1_enabled
              state: "on"
      then:
        - service: script.watering_single
          data:
            output: "1"
            duration: '{{(states("sensor.zone1_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone1_adjust")|float)|int}}'
        - service: smart_irrigation.zone1_reset_bucket
        - service: logbook.log
          data:
            name: Bewässerung Zone 1
            message: wurde {{ (states("sensor.zone1_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone1_adjust")|float)|int}} Sekunden gegossen.
            domain: automation
            entity_id: switch.wassersteuerung
      else:
        - service: system_log.write
          data:
            level: info
            message: 'Zone 1 not watered. Adjusted runtime was: {{ (states("sensor.zone1_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone1_adjust")|float)|int}}, Threshold: {{ states("input_number.watering_zone1_threshold")|int }}, active: {{states("input_boolean.watering_zone1_enabled")}}'

    - if:
        - condition: and
          conditions:
            - condition: template
              value_template: '{{ (states("sensor.zone2_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone2_adjust")|float)|int > states("input_number.watering_zone2_threshold")|int }}'
            - condition: state
              entity_id: input_boolean.watering_zone2_enabled
              state: "on"
      then:
        - service: script.watering_single
          data:
            output: "2"
            duration: '{{(states("sensor.zone2_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone2_adjust")|float)|int}}'
        - service: smart_irrigation.zone2_reset_bucket
        - service: logbook.log
          data:
            name: Bewässerung Zone 2
            message: wurde {{ (states("sensor.zone2_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone2_adjust")|float)|int}} Sekunden gegossen.
            domain: automation
            entity_id: switch.wassersteuerung
      else:
        - service: system_log.write
          data:
            level: info
            message: 'Zone 2 not watered. Adjusted runtime was: {{ (states("sensor.zone2_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone2_adjust")|float)|int}}, Threshold: {{ states("input_number.watering_zone2_threshold")|int }}, active: {{states("input_boolean.watering_zone2_enabled")}}'

    - if:
        - condition: and
          conditions:
            - condition: template
              value_template: '{{ (states("sensor.zone3_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone3_adjust")|float)|int > states("input_number.watering_zone3_threshold")|int }}'
            - condition: state
              entity_id: input_boolean.watering_zone3_enabled
              state: "on"
      then:
        - service: script.watering_single
          data:
            output: "3"
            duration: '{{(states("sensor.zone3_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone3_adjust")|float)|int}}'
        - service: smart_irrigation.zone3_reset_bucket
        - service: logbook.log
          data:
            name: Bewässerung Zone 3
            message: wurde {{ (states("sensor.zone3_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone3_adjust")|float)|int}} Sekunden gegossen.
            domain: automation
            entity_id: switch.wassersteuerung
      else:
        - service: system_log.write
          data:
            level: info
            message: 'Zone 3 not watered. Adjusted runtime was: {{ (states("sensor.zone3_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone3_adjust")|float)|int}}, Threshold: {{ states("input_number.watering_zone3_threshold")|int }}, active: {{states("input_boolean.watering_zone3_enabled")}}'

    - if:
        - condition: and
          conditions:
            - condition: template
              value_template: '{{ (states("sensor.zone4_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone4_adjust")|float)|int > states("input_number.watering_zone4_threshold")|int }}'
            - condition: state
              entity_id: input_boolean.watering_zone4_enabled
              state: "on"
      then:
        - service: script.watering_single
          data:
            output: "4"
            duration: '{{(states("sensor.zone4_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone4_adjust")|float)|int}}'
        - service: smart_irrigation.zone4_reset_bucket
        - service: logbook.log
          data:
            name: Bewässerung Zone 4
            message: wurde {{ (states("sensor.zone4_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone4_adjust")|float)|int}} Sekunden gegossen.
            domain: automation
            entity_id: switch.wassersteuerung
      else:
        - service: system_log.write
          data:
            level: info
            message: 'Zone 4 not watered. Adjusted runtime was: {{ (states("sensor.zone4_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone4_adjust")|float)|int}}, Threshold: {{ states("input_number.watering_zone4_threshold")|int }}, active: {{states("input_boolean.watering_zone4_enabled")}}'

    - if:
        - condition: and
          conditions:
            - condition: template
              value_template: '{{ (states("sensor.zone5_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone5_adjust")|float)|int > states("input_number.watering_zone5_threshold")|int }}'
            - condition: state
              entity_id: input_boolean.watering_zone5_enabled
              state: "on"
      then:
        - service: script.watering_single
          data:
            output: "5"
            duration: '{{(states("sensor.zone5_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone5_adjust")|float)|int}}'
        - service: smart_irrigation.zone5_reset_bucket
        - service: logbook.log
          data:
            name: Bewässerung Zone 5
            message: wurde {{ (states("sensor.zone5_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone5_adjust")|float)|int}} Sekunden gegossen.
            domain: automation
            entity_id: switch.wassersteuerung
      else:
        - service: system_log.write
          data:
            level: info
            message: 'Zone 5 not watered. Adjusted runtime was: {{ (states("sensor.zone5_smart_irrigation_daily_adjusted_run_time")|int * states("input_number.watering_zone5_adjust")|float)|int}}, Threshold: {{ states("input_number.watering_zone5_threshold")|int }}, active: {{states("input_boolean.watering_zone5_enabled")}}'

- alias: Smart Irrigation manual mode
  description: "Straight forward manual mode - use until everything else is working ;)"
  mode: single
  trigger:
    - platform: sun
      event: sunrise
      offset: "-02:30:00"
  # Only run if battery level is ok and at least one zone needs water
  condition:
    - condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.wassersteuerung_battery_level
          # this prevents this to start now
          above: 200
  action:
    - if:
        - condition: time
          weekday:
            - mon
            - fri
      then:
        - service: script.watering_multiple
          data:
            water_hecke: 30
            water_beet: 40
            water_rasenmaher: 30
            water_rasen_viereck: 30
            water_rasen_teilkreis: 30
      else:
        - service: script.watering_multiple
          data:
            water_hecke: 0
            water_beet: 40
            water_rasenmaher: 30
            water_rasen_viereck: 0
            water_rasen_teilkreis: 0
