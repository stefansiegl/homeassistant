- watering_water_current:
    alias: watering_water_current
    description: >
      water the current connection for given duration and updates the counter

      improvements: boolean sensor to check whether water automation is executing. can be used to block uis
    fields:
      duration:
        description: duration in seconds
        required: true
        example: 60
        selector:
          number:
            min: 0
            unit_of_measurement: "seconds"
            mode: box
    #  switch_to_output_mode:
    #      description: will be set if this watering is only done to switch to the correct output
    variables:
      wait_1_to_2: 30
      wait_2_to_3: 60
      wait_3_to_4: 30
      wait_4_to_5: 30
      wait_5_to_1: 30
    mode: single
    sequence:
      - service: system_log.write
        data:
          level: debug
          logger: garden_water_logger
          message: >-
            watering_water_current: Start

      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.watering_in_progress
      - service: logbook.log
        data:
          name: Watering
          message: watering zone {{states("counter.water_current_output")}} for {{duration}} seconds.
          entity_id: switch.wassersteuerung
      - service: input_text.set_value
        target:
          entity_id: input_text.water_status
        data:
          value: "watering zone {{states('counter.water_current_output')}} for {{duration}} seconds."
      - service: switch.turn_on
        target:
          entity_id: switch.wassersteuerung
      - delay:
          seconds: "{{ duration | int }}"
      - service: switch.turn_off
        target:
          entity_id: switch.wassersteuerung
      - service: system_log.write
        data:
          level: debug
          logger: garden_water_logger
          message: >-
            watering_water_current: Watering done, waiting now.

      # we can now set the output to the correct new output.
      - if:
          - condition: numeric_state
            entity_id: counter.water_current_output
            below: 5
        then:
          - service: counter.increment
            target:
              entity_id: counter.water_current_output
        else:
          - service: counter.reset
            target:
              entity_id: counter.water_current_output

      - service: system_log.write
        data:
          level: debug
          logger: garden_water_logger
          message: >-
            watering_water_current: output is already set to {{ states ("counter.water_current_output")}}

      # we need different pauses between switching based on the lengths
      # of the pipe and the output pressure.
      # the numbers are based on my experiments with the system
      # manual switching & measuring time it took to change output
      - choose:
          - conditions: >
              {{ is_state('counter.water_current_output', '1') }}
            sequence:
              - service: input_text.set_value
                target:
                  entity_id: input_text.water_status
                data:
                  value: "Wait ({{ wait_1_to_2 | int }}s) - Switch to Zone 2"
              - delay:
                  seconds: "{{ wait_1_to_2 | int }}"
          - conditions: >
              {{ is_state('counter.water_current_output', '2') }}
            sequence:
              - service: input_text.set_value
                target:
                  entity_id: input_text.water_status
                data:
                  value: "Wait ({{ wait_2_to_3 | int }}s) - Switch to Zone 3"
              - delay:
                  seconds: "{{ wait_2_to_3 | int }}"
          - conditions: >
              {{ is_state('counter.water_current_output', '3') }}
            sequence:
              - service: input_text.set_value
                target:
                  entity_id: input_text.water_status
                data:
                  value: "Wait ({{ wait_3_to_4 | int }}s) - Switch to Zone 4"
              - delay:
                  seconds: "{{ wait_3_to_4 | int }}"
          - conditions: >
              {{ is_state('counter.water_current_output', '4') }}
            sequence:
              - service: input_text.set_value
                target:
                  entity_id: input_text.water_status
                data:
                  value: "Wait ({{ wait_4_to_5 | int }}s) - Switch to Zone 5"
              - delay:
                  seconds: "{{ wait_4_to_5 | int }}"
          - conditions: >
              {{ is_state('counter.water_current_output', '5') }}
            sequence:
              - service: input_text.set_value
                target:
                  entity_id: input_text.water_status
                data:
                  value: "Wait ({{ wait_5_to_1 | int }}s) - Switch to Zone 1"
              - delay:
                  seconds: "{{ wait_5_to_1 | int }}"

      - service: system_log.write
        data:
          level: debug
          logger: garden_water_logger
          message: >-
            watering_water_current: Waiting done.

      - service: input_text.set_value
        target:
          entity_id: input_text.water_status
        data:
          value: "Idle"
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.watering_in_progress
